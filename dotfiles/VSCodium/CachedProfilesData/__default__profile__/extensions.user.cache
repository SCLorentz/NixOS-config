{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/sclorentz/.vscode-oss/extensions/extensions.json","path":"/home/sclorentz/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1753014526371,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.100.13210","productDate":"2025-05-13T18:26:25.331Z","productCommit":"6269597fa45ff94124773d248e242a49e8b1b370","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"jnoortheen.nix-ide","uuid":"0ffebccd-4265-4f2d-a855-db1adcf278c7"},"manifest":{"name":"nix-ide","displayName":"Nix IDE","description":"Nix language support - syntax highlighting, formatting, and error reporting.","version":"0.4.22","publisher":"jnoortheen","icon":"images/icon.png","license":"MIT","engines":{"vscode":">=1.96.0"},"categories":["Programming Languages","Formatters","Snippets"],"keywords":["nix"],"bugs":{"url":"https://github.com/nix-community/vscode-nix-ide/issues"},"homepage":"https://github.com/nix-community/vscode-nix-ide","repository":{"type":"git","url":"https://github.com/nix-community/vscode-nix-ide"},"main":"dist/extension.js","contributes":{"languages":[{"id":"nix","aliases":["Nix","nix"],"extensions":[".nix"],"icon":{"dark":"images/icon.png","light":"images/icon.png"},"configuration":"./language-configuration.json"}],"grammars":[{"language":"nix","scopeName":"source.nix","path":"./dist/nix.tmLanguage.json"},{"scopeName":"markdown.nix.codeblock","path":"./dist/injection.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.nix":"nix"}}],"snippets":[{"language":"nix","path":"./snippets.json"}],"configuration":{"title":"NixIDE","properties":{"nix.formatterPath":{"default":"nixfmt","markdownDescription":"Full path to the nix formatter executable. This setting won't take effect if `nix.enableLanguageServer` is enabled; if that's the case, you can instead set formatter via `nix.serverSettings` (see [README](https://github.com/nix-community/vscode-nix-ide#lsp-plugin-support) for examples)","oneOf":[{"type":"string","enum":["nixfmt","nix3-fmt","alejandra","treefmt","nixpkgs-fmt"],"markdownEnumDescriptions":["[nixfmt](https://github.com/NixOS/nixfmt) - The official formatter for the Nix language","[nix3-fmt](https://nix.dev/manual/nix/2.17/command-ref/new-cli/nix3-fmt) - Use the flake configured formatter","[alejandra](https://github.com/kamadorueda/alejandra) - The Uncompromising Nix Code Formatter","[treefmt](https://github.com/numtide/treefmt-nix) - All in one formatter","[nixpkgs-fmt](https://github.com/nix-community/nixpkgs-fmt) - Deprecated as it is no longer maintained"]},{"type":"array","items":"string","minItems":1}]},"nix.serverPath":{"type":"string","default":"nil","description":"Location of the nix language server command."},"nix.enableLanguageServer":{"type":"boolean","default":false,"description":"Use LSP instead of nix-instantiate and the formatter configured via `nix.formatterPath`."},"nix.serverSettings":{"type":"object","default":{},"description":"Settings passed to the language server on configuration requests."},"nix.hiddenLanguageServerErrors":{"type":"array","items":{"type":"string"},"default":[],"description":"Error notifications from the language server for these request types will be suppressed.","examples":[["textDocument/definition","textDocument/documentSymbol"]]}}},"configurationDefaults":{"[nix]":{"editor.insertSpaces":true,"editor.tabSize":2}},"commands":[{"title":"Restart Language Server","category":"Nix IDE","command":"nix-ide.restartLanguageServer"}],"semanticTokenTypes":[{"id":"boolean","description":"Style for boolean literals","superType":"keywords"},{"id":"constant","description":"Style for `builtins` constants"},{"id":"path","description":"Style for paths"},{"id":"punctuations","description":"Style for punctuations"}],"semanticTokenModifiers":[{"id":"builtin","description":"Style for `builtins` variables and functions"},{"id":"conditional","description":"Style for conditional operators and keywords"},{"id":"delimiter","description":"Style for delimiter punctuations"},{"id":"escape","description":"Style for escape sequences in strings"},{"id":"parenthesis","description":"Style for parenthesis"},{"id":"unresolved","description":"Style for unresolved variables"},{"id":"withAttribute","description":"Style for attributes from `with`"}],"semanticTokenScopes":[{"language":"nix","scopes":{"boolean":["constant.language.boolean.nix"],"constant.builtin":["support.const.nix"],"function.builtin":["support.function.nix"],"struct.builtin":["support.const.nix"],"path":["constant.other.path.nix"],"string":["string.quoted.double.nix"],"string.escape":["constant.character.escape.nix"],"variable":["variable.other.nix"],"variable.unresolved":["invalid.nix"],"parameter":["variable.parameter.name.nix"],"property":["entity.other.attribute-name.single.nix"],"*.withAttribute":["markup.underline"],"operator":["entity.name.operator.nix"]}}]},"devDependencies":{"@commitlint/cli":"^19.8.1","@commitlint/config-conventional":"^19.8.1","@types/command-exists":"^1.2.3","@types/node":"^24.0.3","@types/vscode":"^1.96.0","@vscode/vsce":"^3.5.0","js-yaml":"^4.1.0","lefthook":"^1.11.14","ovsx":"^0.10.4","@vscode/test-cli":"^0.0.11","@vscode/test-electron":"^2.5.2","vscode-tmgrammar-test":"^0.1.3","typescript":"^5.8.3"},"scripts":{"prebuild":"mkdir -p dist && js-yaml syntaxes/nix.YAML-tmLanguage > dist/nix.tmLanguage.json && js-yaml syntaxes/injection.yml > dist/injection.json","build-base":"bun build src/extension.ts --outdir=dist --external=vscode --target=node --format=cjs","build":"bun run build-base --sourcemap --minify","watch":"bun run build-base --sourcemap --watch","postinstall":"lefthook install","clean":"rm -rd dist","prepackage":"rm -f *.vsix","package":"bun run build && bun run vsce package --no-dependencies","publish:ovsx":"ovsx publish *.vsix --pat '$OVS_PAT'","publish:vsce":"vsce publish","publish":"bun run package && bun run publish:vsce && bun run publish:ovsx","pretest":"bun run build && vscode-tmgrammar-snap 'syntaxes/tests/*.nix'","test":"vscode-test","lint":"bun x biome check --write src"},"dependencies":{"command-exists":"^1.2.9","vscode-languageclient":"^9.0.1","vscode-variables":"^1.0.1"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/jnoortheen.nix-ide-0.4.22-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"jnoortheen","metadata":{"installedTimestamp":1752860578173,"pinned":false,"source":"gallery","id":"0ffebccd-4265-4f2d-a855-db1adcf278c7","publisherId":"3a7c13d8-8768-454a-be53-290c25bd0f85","publisherDisplayName":"jnoortheen","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1737531},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ardonplay.vscode-jetbrains-icon-theme","uuid":"96b279e1-e30f-4d34-bad2-f1a5f5e314dc"},"manifest":{"name":"vscode-jetbrains-icon-theme","displayName":"JetBrains Icon Theme","description":"JetBrains Icon Theme for VSCode","publisher":"ardonplay","author":{"name":"Vladimir Moshchuk","email":"ardonplay@gmail.com","url":"https://github.com/ardonplay"},"version":"0.0.4","scripts":{"prebuild":"tsx ./scripts/build/build.ts","package":"vsce package","package!":"tsx ./scripts/build/build.ts && vsce package"},"license":"MIT","icon":"logo.png","repository":{"type":"git","url":"https://github.com/ardonplay/vscode-jetbrains-icon-theme"},"engines":{"vscode":"^1.52.0"},"categories":["Themes"],"extensionKind":["ui","workspace"],"keywords":["jetbrains","icons","icon-theme","theme","intellij","webstorm","idea"],"bugs":{"url":"https://github.com/ardonplay/vscode-jetbrains-icon-theme/issues"},"contributes":{"iconThemes":[{"id":"vscode-jetbrains-icon-theme","label":"JetBrains Icon Theme v1 Dark","path":"./dist/v1/dark/theme.json"},{"id":"vscode-jetbrains-icon-theme-2023-light","label":"JetBrains Icon Theme 2023+ UI Light","path":"./dist/2023/light/theme.json"},{"id":"vscode-jetbrains-icon-theme-2023-dark","label":"JetBrains Icon Theme 2023+ UI Dark","path":"./dist/2023/dark/theme.json"},{"id":"vscode-jetbrains-icon-theme-2023-auto","label":"JetBrains Icon Theme 2023+ UI Auto","path":"./dist/2023/auto/theme.json"}]},"devDependencies":{"@actions/core":"^1.10.1","@types/node":"^20.8.0","@vscode/vsce":"^2.19.0","semantic-release":"^21.0.6","semantic-release-vsce":"^5.5.10","svgson":"^5.3.1","tsx":"^3.13.0","typescript":"^5.2.2"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/ardonplay.vscode-jetbrains-icon-theme-0.0.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ardonplay","metadata":{"installedTimestamp":1752960760301,"pinned":false,"source":"gallery","id":"96b279e1-e30f-4d34-bad2-f1a5f5e314dc","publisherId":"50e60f2c-6441-4390-898c-a952c7f36167","publisherDisplayName":"ardonplay","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1838441},"isValid":true,"validations":[[2,"property `extensionKind` can be defined only if property `main` is also defined."]],"preRelease":false},{"type":1,"identifier":{"id":"mesonbuild.mesonbuild","uuid":"8d985901-944a-4bc1-8773-42041c4d40fb"},"manifest":{"name":"mesonbuild","displayName":"Meson","description":"Meson language support for Visual Studio Code","icon":"graphics/icon.png","version":"1.27.0","license":"Apache-2.0","publisher":"mesonbuild","author":{"name":"The Meson Project"},"contributors":[{"name":"Ali Sabil"},{"name":"Nathan Graule","email":"solarliner@gmail.com","url":"https://solarliner.me"},{"name":"Dylan Baker","email":"dylan@pnwbakers.com","url":"https://recursiveascent.blogspot.com/"}],"repository":{"type":"git","url":"https://github.com/mesonbuild/vscode-meson.git"},"bugs":{"url":"https://github.com/mesonbuild/vscode-meson/issues"},"homepage":"https://github.com/mesonbuild/vscode-meson/blob/master/README.md","engines":{"vscode":"^1.75.0"},"categories":["Programming Languages"],"activationEvents":["workspaceContains:meson.build","workspaceContains:*/meson.build","workspaceContains:*/*/meson.build","onDebugDynamicConfigurations","onDebugDynamicConfigurations:cppdbg","onDebugDynamicConfigurations:lldb"],"main":"./out/extension","contributes":{"commands":[{"command":"mesonbuild.openBuildFile","title":"Open meson.build","icon":"$(preferences-open-settings)"},{"command":"mesonbuild.reconfigure","title":"Meson: Reconfigure","icon":{"dark":"res/meson_32.svg","light":"res/meson_32.svg"}},{"command":"mesonbuild.clean","title":"Meson: Clean"},{"command":"mesonbuild.build","title":"Meson: Build"},{"command":"mesonbuild.test","title":"Meson: Run Unit Tests"},{"command":"mesonbuild.run","title":"Meson: Run Executable"},{"command":"mesonbuild.install","title":"Meson: Install"},{"command":"mesonbuild.benchmark","title":"Meson: Run Benchmarks"},{"command":"mesonbuild.restartLanguageServer","title":"Meson: Restart Language Server"},{"command":"mesonbuild.selectRootDir","title":"Meson: Select Project Root Directory"}],"configuration":{"title":"Meson build configuration","properties":{"mesonbuild.selectRootDir":{"type":"boolean","default":true,"description":"Ask to select a Meson project root directory when more than one project is detected."},"mesonbuild.configureOnOpen":{"type":["boolean","string"],"default":"ask","enum":[true,false,"ask"],"enumDescriptions":["Automatically configure on open","Never configure on open","Ask every time"],"description":"Have VS Code run Meson configure on opening a folder."},"mesonbuild.buildFolder":{"type":"string","default":"builddir","description":"Specify in which folder Meson configures and builds the project. Changing this value will reload the VS Code window."},"mesonbuild.configureOptions":{"type":"array","default":[],"description":"Specify the list of options used for setup."},"mesonbuild.configureEnvironment":{"type":"object","additionalProperties":{"type":"string"},"default":{},"description":"Specify the list of additional environment variables used for setup."},"mesonbuild.setupOptions":{"type":"array","default":[],"description":"Specify the list of options used for setup. Can be used to specify a cross file (use --cross-file=FILE).","deprecationMessage":"--cross-file and --native-file should be in configureOptions too."},"mesonbuild.testOptions":{"type":"array","default":[],"description":"Specify the list of options used for running tests."},"mesonbuild.testEnvironment":{"type":"object","additionalProperties":{"type":"string"},"default":{},"description":"Specify the list of additional environment variables used for running tests."},"mesonbuild.benchmarkOptions":{"type":"array","default":["--verbose"],"description":"Specify the list of options used for running benchmarks. --benchmark is implicit."},"mesonbuild.mesonPath":{"type":"string","default":"meson","description":"Specify the meson executable to use"},"mesonbuild.muonPath":{"type":"string","default":"muon","description":"Specify the muon executable to use"},"mesonbuild.linting.enabled":{"type":"boolean","default":true,"description":"Globally enable/disable linting"},"mesonbuild.linter.muon.enabled":{"type":"boolean","default":false,"description":"Enable muon linter"},"mesonbuild.formatting.enabled":{"type":"boolean","default":false,"description":"Globally enable/disable formatting"},"mesonbuild.formatting.provider":{"type":"string","default":"auto","enum":["auto","meson","muon"],"description":"Select which formatting provider to use. If set to 'auto', the best available one is picked"},"mesonbuild.formatting.muonConfig":{"type":"string","default":null,"description":"Path to muon formatter config.ini"},"mesonbuild.formatting.mesonConfig":{"type":"string","default":null,"description":"Path to meson format config 'meson.format'"},"mesonbuild.debugOptions":{"type":"object","default":{"setupCommands":[{"description":"Enable pretty-printing for gdb","text":"-enable-pretty-printing","ignoreFailures":true}]},"description":"Give an object that's merged into the debug configuration provider"},"mesonbuild.languageServer":{"type":["string","null"],"default":"mesonlsp","enum":["Swift-MesonLSP","mesonlsp",null],"description":"Select which language server to use. Swift-MesonLSP is a legacy alias for mesonlsp."},"mesonbuild.languageServerPath":{"type":"string","description":"Binary name or path to language server","default":""},"mesonbuild.downloadLanguageServer":{"type":["boolean","string"],"default":"ask","enum":[true,false,"ask"],"enumDescriptions":["Download the language server","Do not download the language server","Ask every time to download the language server"],"description":"Have VSCode download the language server automatically (MacOS/Windows only for Swift-MesonLSP)"},"mesonbuild.modifySettings":{"type":["boolean","array"],"items":{"enum":["ms-vscode.cpptools","rust-lang.rust-analyzer"]},"default":true,"markdownDescription":"Automatically setup other extensions to use files generated by Meson. Set it to `false` if for example `.vscode/settings.json` is committed into git and should not be modified. It can also be an array of extension IDs of the following:\n- [`ms-vscode.cpptools`](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)\n- [`rust-lang.rust-analyzer`](https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer)."},"mesonbuild.mesonlsp.others.defaultFormattingConfig":{"type":["null","string"],"default":null,"description":"Default muon config to use for formatting"},"mesonbuild.mesonlsp.others.ignoreDiagnosticsFromSubprojects":{"type":["boolean","array"],"default":false,"description":"Ignore diagnostics from either all subprojects (if true) or from selected subprojects (if the value is an array)"},"mesonbuild.mesonlsp.others.disableInlayHints":{"type":"boolean","default":false,"description":"Disable inlay hints"},"mesonbuild.mesonlsp.others.removeDefaultTypesInInlayHints":{"type":"boolean","default":false,"description":"Reduce clutter in inlay hints by removing any|dict(any)|list(any)"},"mesonbuild.mesonlsp.others.disablePosargInlayHints":{"type":"boolean","default":false,"description":"Disable inlay hints for arguments"},"mesonbuild.mesonlsp.others.useCustomParser":{"type":"boolean","default":true,"description":"If true, a custom faster parser is used with better diagnostics, set to `false` it will fall back to the tree-sitter based parser"},"mesonbuild.mesonlsp.others.muonPath":{"type":"string","default":null,"description":"Set path to muon that will be used for formatting"},"mesonbuild.mesonlsp.linting.disableNameLinting":{"type":"boolean","default":false,"description":"Disable checking variable names for snake_case"},"mesonbuild.mesonlsp.linting.disableAllIdLinting":{"type":"boolean","default":false,"description":"Shortcut for all other `mesonbuild.mesonlsp.linting.disableXXXIdLinting` options"},"mesonbuild.mesonlsp.linting.disableCompilerIdLinting":{"type":"boolean","default":false,"description":"Disable checking whether a string literal is a known id, if comparing it with the result of `compiler.get_id()`"},"mesonbuild.mesonlsp.linting.disableCompilerArgumentIdLinting":{"type":"boolean","default":false,"description":"Disable checking whether a string literal is a known id, if comparing it with the result of `compiler.get_argument_syntax()`"},"mesonbuild.mesonlsp.linting.disableLinkerIdLinting":{"type":"boolean","default":false,"description":"Disable checking whether a string literal is a known id, if comparing it with the result of `compiler.get_linker_id()`"},"mesonbuild.mesonlsp.linting.disableCpuFamilyLinting":{"type":"boolean","default":false,"description":"Disable checking whether a string literal is a known CPU family, if comparing it with the result of `XXX_machine.cpu_family()`"},"mesonbuild.mesonlsp.linting.disableOsFamilyLinting":{"type":"boolean","default":false,"description":"Disable checking whether a string literal is a known system, if comparing it with the result of `XXX_machine.system()`"},"mesonbuild.mesonlsp.linting.disableUnusedVariableCheck":{"type":"boolean","default":false,"description":"Disable checking whether a variable is unused"},"mesonbuild.mesonlsp.linting.disableArgTypeChecking":{"type":"boolean","default":false,"description":"Disable checking whether the types of arguments passed to a method or function are correct"}}},"taskDefinitions":[{"type":"meson","required":["mode"],"properties":{"target":{"type":"string","description":"The Meson target. The full name, including path and type, is mandatory (e.g. relative/path/to/targetname:shared_library)","default":"all","dependencies":{"mode":{"enum":["build","test"]}}},"filename":{"type":"string","description":"Filename to run as part of the target","dependencies":{"mode":{"enum":["run"]}}},"mode":{"type":"string","description":"Specify the kind of task to perform","enum":["build","run","test","reconfigure","clean","install"],"default":"build"}}}],"languages":[{"id":"meson","aliases":["Meson","meson","mesonbuild"],"filenames":["meson.build","meson_options.txt","meson.options"],"configuration":"./language-configuration.json","icon":{"dark":"res/meson_32.svg","light":"res/meson_32.svg"}},{"id":"ini","filenamePatterns":["**/subprojects/*.wrap"],"aliases":["Meson Wrap"]},{"id":"ini","filenamePatterns":["meson.format"],"aliases":["Meson Format Config"]}],"grammars":[{"language":"meson","scopeName":"source.meson","path":"./syntaxes/meson.tmLanguage.json"}],"snippets":[{"language":"meson","path":"./snippets/meson.json"}],"viewsContainers":{"activitybar":[{"id":"meson-sidebar","title":"Meson","icon":"res/meson_32.svg"}]},"views":{"meson-sidebar":[{"id":"meson-project","name":"Current project","when":"mesonbuild.hasProject"}]},"menus":{"view/item/context":[{"command":"mesonbuild.openBuildFile","when":"view == meson-project && viewItem == meson-target","group":"inline"}],"view/title":[{"command":"mesonbuild.reconfigure","when":"view == meson-project","group":"navigation"}],"commandPalette":[{"command":"mesonbuild.openBuildFile","when":"false"},{"command":"mesonbuild.reconfigure","when":"mesonbuild.hasProject"},{"command":"mesonbuild.clean","when":"mesonbuild.hasProject"},{"command":"mesonbuild.build","when":"mesonbuild.hasProject"},{"command":"mesonbuild.test","when":"mesonbuild.hasProject"},{"command":"mesonbuild.run","when":"mesonbuild.hasProject"},{"command":"mesonbuild.install","when":"mesonbuild.hasProject"},{"command":"mesonbuild.benchmark","when":"mesonbuild.hasProject"},{"command":"mesonbuild.restartLanguageServer","when":"mesonbuild.hasProject"},{"command":"mesonbuild.selectRootDir","when":"mesonbuild.hasMultipleProjects"}]},"problemMatchers":[{"name":"meson-gcc","source":"gcc","owner":"meson","fileLocation":["autoDetect","${workspaceFolder}/${config:mesonbuild.buildFolder}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}]},"scripts":{"compile":"tsc -p ./","markdownlint:check":"markdownlint-cli2 **.md","postinstall":"husky install","prettier:check":"prettier --check **.md **.ts **.yml **.json","vscode:prepublish":"npm run compile","watch":"tsc -watch -p ./"},"devDependencies":{"@types/adm-zip":"^0.5.1","@types/node":"^16.11.7","@types/vscode":"^1.75.0","@types/which":"^3.0.0","husky":"^8.0.3","lint-staged":"^14.0.1","markdownlint-cli2":"^0.10.0","prettier":"^3.0.3","typescript":"^5.2.2","vscode-textmate":"^9.0.0"},"dependencies":{"adm-zip":"^0.5.10","vscode-cpptools":"^6.1.0","vscode-languageclient":"^9.0.1","which":"^4.0.0"},"prettier":{"proseWrap":"always"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/mesonbuild.mesonbuild-1.27.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"mesonbuild","metadata":{"installedTimestamp":1752963902212,"pinned":false,"source":"gallery","id":"8d985901-944a-4bc1-8773-42041c4d40fb","publisherId":"86b1ac93-2b1a-44eb-bcae-2c5b66ffb4ea","publisherDisplayName":"mesonbuild","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":2330336},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"franneck94.vscode-c-cpp-dev-extension-pack","uuid":"a5d8fcbb-073c-49c3-8272-30f78502b5b8"},"manifest":{"name":"vscode-c-cpp-dev-extension-pack","displayName":"C/C++ Extension Pack","description":"Popular VSCode Extensions for C/C++","version":"0.10.0","publisher":"franneck94","engines":{"vscode":"^1.72.0"},"icon":"icon.png","galleryBanner":{"color":"#222222","theme":"dark"},"keywords":["c","c++","cpp","extension pack"],"categories":["Extension Packs"],"repository":{"url":"https://github.com/franneck94/vscode-c-cpp-extension-pack"},"homepage":"https://github.com/franneck94/vscode-c-cpp-extension-pack","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-extension-pack/issues"},"extensionPack":["franneck94.c-cpp-runner","franneck94.vscode-c-cpp-config","twxs.cmake","bbenoist.doxygen","cschlosser.doxdocgen","vadimcn.vscode-lldb","jeff-hykin.better-cpp-syntax","13xforever.language-x86-64-assembly","cheshirekow.cmake-format"]},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/franneck94.vscode-c-cpp-dev-extension-pack-0.10.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1752964416884,"pinned":false,"source":"gallery","id":"a5d8fcbb-073c-49c3-8272-30f78502b5b8","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":15370},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"cheshirekow.cmake-format","uuid":"5338f4d8-048c-433f-bce4-44aa922cedc2"},"manifest":{"name":"cmake-format","displayName":"cmake-format","description":"Format listfiles so they don't look like crap","version":"0.6.13","publisher":"cheshirekow","repository":"https://github.com/cheshirekow/cmakelang","icon":"images/cmake-format-logo.png","license":"GPL-3.0-or-later","engines":{"vscode":"^1.23.0"},"categories":["Other"],"activationEvents":["onLanguage:cmake"],"main":"./out/extension","contributes":{"languages":[{"id":"cmake","aliases":["cmake","cmake-listfile"],"extensions":["cmake"]}],"configuration":{"type":"object","title":"cmake-format","properties":{"cmakeFormat.cwd":{"type":["string","null"],"default":null,"description":"Working directory for cmake-format. Default will be the workspace root for the active document."},"cmakeFormat.env":{"type":["object","null"],"default":null,"description":"Environment used when subprocessing cmake-format. Set PYTHONPATH or PATH here as needed."},"cmakeFormat.mergeEnv":{"type":"boolean","default":true,"description":"Set to false to use the cmakeFormat.env environment verbatim, set to true to merge it with the existing environment."},"cmakeFormat.exePath":{"type":"string","default":"cmake-format","description":"Full path cmake-format entry point script or binary"},"cmakeFormat.args":{"type":"array","items":{"type":"string"},"default":[],"description":"Additional arguments to pass to cmake-format. Specify, e.g. --config-file here."}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.25","tslint":"^5.8.0","typescript":"^3.5.1","vscode":"^1.1.36","vsce":"^1.73.0"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/cheshirekow.cmake-format-0.6.13-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"cheshirekow","metadata":{"installedTimestamp":1752964416886,"pinned":false,"source":"gallery","id":"5338f4d8-048c-433f-bce4-44aa922cedc2","publisherId":"0baaec0f-9c29-4f95-97ba-d5b6f023bcd2","publisherDisplayName":"cheshirekow","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":549552},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"bbenoist.doxygen","uuid":"aab644b7-f446-4774-87fc-2cce8f0d5a4f"},"manifest":{"name":"Doxygen","description":"Doxygen language support for Visual Studio Code","version":"1.0.0","publisher":"bbenoist","icon":"images/icon.png","galleryBanner":{"color":"#244FA7","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/bbenoist/vscode-doxygen/issues"},"homepage":"https://github.com/bbenoist/vscode-doxygen/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bbenoist/vscode-doxygen.git"},"engines":{"vscode":"^0.10.1"},"categories":["Languages"],"contributes":{"languages":[{"id":"doxygen","extensions":[".dox"],"configuration":"./doxygen.configuration.json"}],"grammars":[{"language":"doxygen","scopeName":"source.doxygen","path":"./syntaxes/doxygen.tmLanguage"}]}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/bbenoist.doxygen-1.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bbenoist","metadata":{"installedTimestamp":1752964416886,"pinned":false,"source":"gallery","id":"aab644b7-f446-4774-87fc-2cce8f0d5a4f","publisherId":"787ce942-60d4-48d6-b14e-25bdc72bd145","publisherDisplayName":"bbenoist","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":61817},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"jeff-hykin.better-cpp-syntax","uuid":"73767f91-7dcb-43cb-90b3-596d073eea1f"},"manifest":{"name":"better-cpp-syntax","displayName":"Better C++ Syntax","description":"The bleeding edge of the C++ syntax","version":"1.27.1","icon":"icon.png","scripts":{},"keywords":["C++","cpp","syntax","textmate","highlighting","coloring","color"],"engines":{"vscode":"^1.0.0"},"author":{"name":"Jeff Hykin"},"publisher":"jeff-hykin","categories":["Programming Languages"],"repository":{"url":"https://github.com/jeff-hykin/better-cpp-syntax","type":"git"},"contributes":{"grammars":[{"language":"cpp","scopeName":"source.cpp.embedded.macro","path":"./autogenerated/cpp.embedded.macro.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm"}},{"language":"cpp","scopeName":"source.cpp","path":"./autogenerated/cpp.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm","meta.preprocessor.macro.contents":"cpp"}}]},"devDependencies":{"chalk":"^2.4.2","dictionary-en-us":"^2.1.1","lodash":"^4.17.19","nspell":"^2.1.2","oniguruma":"^7.2.0","ovsx":"^0.5.1","textmate-bailout":"^1.1.0","textmate-tester":"^1.1.9","vsce":"^1.103.1"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/jeff-hykin.better-cpp-syntax-1.27.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"jeff-hykin","metadata":{"installedTimestamp":1752964416885,"pinned":false,"source":"gallery","id":"73767f91-7dcb-43cb-90b3-596d073eea1f","publisherId":"b734936b-6cc4-40c1-b17a-c6a7e1f680cd","publisherDisplayName":"jeff-hykin","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1501369},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"13xforever.language-x86-64-assembly","uuid":"7c8fcf53-a602-48d2-afdf-9c1318472604"},"manifest":{"name":"language-x86-64-assembly","displayName":"x86 and x86_64 Assembly","description":"Cutting edge x86 and x86_64 assembly syntax highlighting","version":"3.1.5","preview":false,"icon":"logo.png","engines":{"vscode":"^1.0.0"},"author":{"name":"Ilya Veselov"},"publisher":"13xforever","contributes":{"languages":[{"id":"asm-intel-x86-generic","aliases":["x86 and x86_64 Assembly","asm-intel-x86-generic"],"extensions":[".asm",".nasm",".yasm",".inc",".s"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"asm-intel-x86-generic","scopeName":"source.asm.x86_64","path":"./syntaxes/language-x86_64-assembly.tmLanguage"}]},"categories":["Programming Languages"],"repository":{"url":"https://github.com/13xforever/x86_64-assembly-vscode","type":"git"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/13xforever.language-x86-64-assembly-3.1.5-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"13xforever","metadata":{"installedTimestamp":1752964416891,"pinned":false,"source":"gallery","id":"7c8fcf53-a602-48d2-afdf-9c1318472604","publisherId":"1e9b49a6-88ea-4661-8c1b-c7a713cebd78","publisherDisplayName":"13xforever","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":92889},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"vadimcn.vscode-lldb","uuid":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6"},"manifest":{"name":"vscode-lldb","displayName":"CodeLLDB","version":"1.11.5","publisher":"vadimcn","description":"A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.","license":"MIT","author":{"name":"vadimcn"},"icon":"images/lldb.png","categories":["Debuggers"],"keywords":["C++","Rust","Reverse","Embedded","Debugger"],"private":true,"repository":{"type":"git","url":"https://github.com/vadimcn/codelldb.git"},"bugs":{"url":"https://github.com/vadimcn/codelldb/issues"},"qna":"https://github.com/vadimcn/codelldb/discussions","engines":{"vscode":"^1.61.0"},"dependencies":{"string-argv":"^0.3.2","yaml":"^1.10.0"},"devDependencies":{"@types/vscode":"^1.60.0","@types/node":"^14.0.0","@types/mocha":"^10.0.0","@vscode/debugprotocol":"^1.53.0","@vscode/debugadapter-testsupport":"^1.51.0","typescript":"^4.7.0","mocha":"^10.8.1","source-map-support":"^0.5.12","mocha-suppress-logs":"^0.3.1","vsce":"^2.8.0","webpack":"^5.37.1","webpack-cli":"^4.7.0","ts-loader":"^8.0.0","json-pointer":"^0.6.2"},"scripts":{"vsce":"vsce","mocha":"mocha","tsc":"tsc","webpack":"webpack"},"main":"extension.js","activationEvents":["onDebug","onUri","onStartupFinished"],"contributes":{"commands":[{"category":"LLDB","title":"Display Format...","command":"lldb.displayFormat"},{"category":"LLDB","title":"Show Disassembly...","command":"lldb.showDisassembly"},{"category":"LLDB","title":"Toggle Disassembly","command":"lldb.toggleDisassembly"},{"category":"LLDB","title":"Toggle Pointee Summaries","command":"lldb.toggleDerefPointers"},{"category":"LLDB","title":"Toggle Debug Console Mode","command":"lldb.toggleConsoleMode"},{"category":"LLDB","title":"Run Diagnostics","command":"lldb.diagnose"},{"category":"LLDB","title":"Generate Launch Configurations from Cargo.toml","command":"lldb.getCargoLaunchConfigs"},{"category":"LLDB","title":"Display Options...","command":"lldb.changeDisplaySettings"},{"category":"LLDB","title":"Copy Value","command":"lldb.modules.copyValue"},{"category":"LLDB","title":"Use Alternate Backend...","command":"lldb.alternateBackend"},{"category":"LLDB","title":"Attach to Process...","command":"lldb.attach"},{"category":"LLDB","title":"Command Prompt","command":"lldb.commandPrompt"},{"category":"LLDB","title":"Search Symbols...","command":"lldb.symbols","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"View Memory...","command":"lldb.viewMemory","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"Exclude Caller","command":"lldb.excludedCallers.add","enablement":"debugType == 'lldb' && focusedView == 'workbench.debug.callStackView'"},{"category":"LLDB","title":"Remove Caller Exclusion","command":"lldb.excludedCallers.remove","icon":"$(close)"},{"category":"LLDB","title":"Remove All Caller Exclusions","command":"lldb.excludedCallers.removeAll","icon":"$(clear-all)"}],"languages":[{"id":"lldb.disassembly","aliases":["Disassembly"],"extensions":[".disasm"]}],"grammars":[{"language":"lldb.disassembly","scopeName":"source.disassembly","path":"./syntaxes/disassembly.json"}],"views":{"debug":[{"id":"lldb.loadedModules","name":"Modules","when":"debugType == 'lldb'"},{"id":"lldb.excludedCallers","name":"Excluded Callers","when":"debugType == 'lldb'"}]},"menus":{"commandPalette":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}],"debug/callstack/context":[{"command":"lldb.excludedCallers.add","when":"debugType == 'lldb'"}],"view/title":[{"command":"lldb.excludedCallers.removeAll","when":"view == 'lldb.excludedCallers'","group":"navigation"}],"view/item/context":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"},{"command":"lldb.excludedCallers.remove","when":"view == 'lldb.excludedCallers'","group":"inline"}]},"configuration":[{"title":"General","properties":{"lldb.consoleMode":{"description":"Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.","type":"string","enum":["commands","evaluate","split"],"default":"commands","enumDescriptions":["Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).","Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick).","(experimental) Use the debug console for warningevaluation of expressions, open a separate terminal for input of LLDB commands."],"scope":"resource","order":1},"lldb.evaluationTimeout":{"description":"Timeout for expression evaluation, in seconds.","type":"number","default":5,"scope":"resource","order":2},"lldb.displayFormat":{"description":"Default format for displayed variable values.","type":"string","enum":["auto","hex","decimal","binary"],"default":"auto","scope":"resource","order":3},"lldb.dereferencePointers":{"description":"Whether to show summaries of the pointees instead of numeric values of the pointers themselves.","type":"boolean","default":true,"scope":"resource","order":4},"lldb.showDisassembly":{"description":"When to show disassembly.","type":"string","enum":["auto","never","always"],"default":"auto","enumDescriptions":["Only when source is not available.","Never show.","Always show, even if source is available."],"scope":"resource","order":5},"lldb.suppressMissingSourceFiles":{"description":"Suppress VSCode's messages about missing source files (when debug info refers to files not available on the local machine).","type":"boolean","default":true,"scope":"resource","order":10},"lldb.dbgconfig":{"description":"Common user-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.","type":"object","patternProperties":{".*":{"type":["string","number","array","boolean","null"]}},"default":{},"scope":"resource","order":100},"lldb.script":{"description":"Settings for scripts running within the debugger context. These may be accessed via `debugger.get_config()`. The schema is free-form, except that the `lang` subtree is reserved for built-in language support helpers.","type":"object","default":{},"scope":"resource","order":100}}},{"title":"Launch configuration defaults","properties":{"lldb.launch.initCommands":{"markdownDescription":"Commands executed *before* initCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":1},"lldb.launch.preRunCommands":{"markdownDescription":"Commands executed *before* preRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":2},"lldb.launch.postRunCommands":{"markdownDescription":"Commands executed *before* postRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":3},"lldb.launch.preTerminateCommands":{"markdownDescription":"Commands executed *after* preTerminateCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.exitCommands":{"markdownDescription":"Commands executed *after* exitCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.env":{"description":"Additional environment variables merged with 'env' individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.envFile":{"order":10,"description":"File to read the environment variables from.","type":"string"},"lldb.launch.cwd":{"description":"Default program working directory.","type":"string","scope":"resource","order":10},"lldb.launch.terminal":{"description":"Default terminal type.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"scope":"resource","order":10},"lldb.launch.stdio":{"description":"Default destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"scope":"resource","order":10},"lldb.launch.expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"],"scope":"resource","order":10},"lldb.launch.sourceMap":{"description":"Additional entries that will be merged with 'sourceMap's of individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.breakpointMode":{"scope":"resource","order":10,"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]},"lldb.launch.sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","items":{"type":"string"},"scope":"resource","order":20},"lldb.launch.relativePathBase":{"description":"Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string","scope":"resource","order":100},"lldb.launch.debugServer":{"description":"Debug server port.","type":["null","integer"],"defaultSnippets":[{"label":"Port 4711","body":4711}],"scope":"resource","order":999}}},{"title":"Advanced","properties":{"lldb.verboseLogging":{"description":"Turns on verbose logging.","type":"boolean","default":false,"scope":"resource","order":1},"lldb.rpcServer":{"description":"Start an RPC server that will accept debug configuration requests.","type":["object","null"],"default":null,"scope":"window","order":2},"lldb.library":{"markdownDescription":"Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.","type":"string","scope":"resource","order":10},"lldb.cargo":{"markdownDescription":"Name of the command to invoke as Cargo.","type":"string","default":"cargo","scope":"resource","order":10},"lldb.adapterEnv":{"description":"Extra environment variables for the debug adapter.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource","order":10},"lldb.evaluateForHovers":{"description":"Enable value preview when cursor is hovering over a variable.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.commandCompletions":{"description":"Enable command completions in debug console.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.useNativePDBReader":{"description":"Use the native reader for the PDB debug info format (Windows only)","type":"boolean","scope":"resource","order":10},"lldb.suppressUpdateNotifications":{"description":"Don't show extension update notifications.","type":"boolean","scope":"application","order":100}}}],"breakpoints":[{"language":"ada"},{"language":"arm"},{"language":"arm64"},{"language":"asm"},{"language":"c"},{"language":"cpp"},{"language":"crystal"},{"language":"d"},{"language":"fortran"},{"language":"fortran-modern"},{"language":"haskell"},{"language":"jai"},{"language":"java"},{"language":"julia"},{"language":"kotlin"},{"language":"lldb.disassembly"},{"language":"nim"},{"language":"objective-c"},{"language":"objective-cpp"},{"language":"objectpascal"},{"language":"ocaml"},{"language":"odin"},{"language":"opencl"},{"language":"pascal"},{"language":"rust"},{"language":"swift"},{"language":"zig"}],"debuggers":[{"type":"lldb","label":"CodeLLDB","languages":["ada","arm","arm64","asm","c","cpp","crystal","fortran-modern","fortran","jai","nim","objective-c","objective-cpp","objectpascal","odin","pascal","rust"],"variables":{"pickProcess":"lldb.pickProcess","pickMyProcess":"lldb.pickMyProcess"},"configurationAttributes":{"launch":{"properties":{"program":{"description":"Path to the program to debug.","type":"string"},"cargo":{"description":"Cargo invocation parameters.","type":"object","properties":{"args":{"description":"Cargo command line arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false,"defaultSnippets":[{"label":"Library unit tests","body":{"args":["test","--no-run","--lib"],"filter":{"kind":"lib"}}},{"label":"Executable","body":{"args":["build","--bin=${1:<name>}"],"filter":{"kind":"bin"}}}]},"args":{"description":"Program arguments.","type":["array","string"]},"cwd":{"description":"Program working directory.","type":"string"},"env":{"description":"Additional environment variables.","type":"object","patternProperties":{".*":{"type":"string"}}},"envFile":{"description":"File to read the environment variables from.","type":"string"},"stdio":{"description":"Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"default":null},"terminal":{"description":"Terminal type to use.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"default":"integrated"},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","type":"string","enum":["integratedTerminal","externalTerminal","internalConsole"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"stopOnEntry":{"description":"Automatically stop debuggee after launch.","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}},"anyOf":[{"required":["program"]},{"required":["targetCreateCommands"]},{"required":["cargo"]}]},"attach":{"properties":{"program":{"description":"Path to the program to attach to.","type":"string"},"pid":{"description":"Process id to attach to.","type":["integer","string"],"default":"${command:pickMyProcess}"},"stopOnEntry":{"description":"Automatically stop debuggee after attach.","type":"boolean","default":false},"waitFor":{"description":"Wait for the process to launch (MacOS only).","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}}},"custom":{"deprecated":true,"description":"`custom` is deprecated.  Use `launch` instead.","properties":{"program":{"description":"Path to the program to debug.","type":"string"},"cargo":{"description":"Cargo invocation parameters.","type":"object","properties":{"args":{"description":"Cargo command line arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false,"defaultSnippets":[{"label":"Library unit tests","body":{"args":["test","--no-run","--lib"],"filter":{"kind":"lib"}}},{"label":"Executable","body":{"args":["build","--bin=${1:<name>}"],"filter":{"kind":"bin"}}}]},"args":{"description":"Program arguments.","type":["array","string"]},"cwd":{"description":"Program working directory.","type":"string"},"env":{"description":"Additional environment variables.","type":"object","patternProperties":{".*":{"type":"string"}}},"envFile":{"description":"File to read the environment variables from.","type":"string"},"stdio":{"description":"Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"default":null},"terminal":{"description":"Terminal type to use.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"default":"integrated"},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","type":"string","enum":["integratedTerminal","externalTerminal","internalConsole"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"stopOnEntry":{"description":"Automatically stop debuggee after launch.","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}}}},"configurationSnippets":[{"label":"CodeLLDB: Launch","description":"Launch a new instance of the specified program.","body":{"type":"lldb","request":"launch","name":"${2:Launch}","program":"^\"\\${workspaceFolder}/${1:<program>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\""}},{"label":"CodeLLDB: Attach to PID","description":"Attach to a running process with the specified process id.","body":{"type":"lldb","request":"attach","name":"${2:Attach}","pid":"^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"}},{"label":"CodeLLDB: Attach by Name","description":"Attach to a running instance of the specified program.","body":{"type":"lldb","request":"attach","name":"${2:Attach}","program":"^\"\\${workspaceFolder}/${1:<program>}\""}},{"label":"CodeLLDB: Custom","description":"Launch or attach using raw LLDB commands.","body":{"type":"lldb","request":"launch","name":"${2:Custom launch}","targetCreateCommands":["^\"target create \\${workspaceFolder}/${1:<program>}\""],"processCreateCommands":["settings set target.run-args ${3:value1 value2 value3}","process launch"]}},{"label":"CodeLLDB: Debug Cargo Target","description":"Debug an executable target in a Cargo package.","body":{"type":"lldb","request":"launch","name":"${2:Cargo launch}","cargo":{"args":["build","${1:--lib}"]},"args":[]}},{"label":"CodeLLDB: Debug Cargo Tests","description":"Debug unit tests in a Cargo package.","body":{"type":"lldb","request":"launch","name":"${2:Cargo test}","cargo":{"args":["test","--no-run","${1:--lib}"]},"args":[]}}]}]},"config":{"platformPackages":{"url":"https://github.com/vadimcn/codelldb/releases/download/v${version}/${platformPackage}","platforms":{"linux-x64":"codelldb-linux-x64.vsix","linux-arm64":"codelldb-linux-arm64.vsix","linux-arm":"codelldb-linux-armhf.vsix","darwin-x64":"codelldb-darwin-x64.vsix","darwin-arm64":"codelldb-darwin-arm64.vsix","win32-x64":"codelldb-win32-x64.vsix","win32-ia32":"codelldb-win32-x64.vsix"}}}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/vadimcn.vscode-lldb-1.11.5","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"vadimcn","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1752964434237,"pinned":true,"source":"vsix","id":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6","publisherDisplayName":"vadimcn","publisherId":"3b05d186-6311-4caa-99b5-09032a9d3cf5","isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":163226023},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"franneck94.c-cpp-runner","uuid":"0f4eac03-b4ec-4a55-bce1-deb41fde32ab"},"manifest":{"name":"c-cpp-runner","displayName":"C/C++ Runner","description":"🚀 Compile, run and debug single or multiple C/C++ files with ease. 🚀","version":"9.4.7","publisher":"franneck94","license":"MIT","icon":"icon.png","galleryBanner":{"color":"#9c9c9c","theme":"dark"},"engines":{"vscode":"^1.85.0"},"categories":["Programming Languages","Debuggers","Snippets"],"tags":["c","c++","run","compile","build","debug"],"repository":{"type":"git","url":"https://github.com/franneck94/vscode-c-cpp-runner.git"},"homepage":"https://github.com/franneck94/vscode-c-cpp-runner/README.md","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-runner/issues"},"activationEvents":["onLanguage:c","onLanguage:cpp","workspaceContains:*.h","workspaceContains:*.c","workspaceContains:*.hh","workspaceContains:*.cc","workspaceContains:*.hxx","workspaceContains:*.cxx","workspaceContains:*.hpp","workspaceContains:*.cpp","workspaceContains:*.cu"],"main":"./dist/main","contributes":{"taskDefinitions":[{"type":"C_Cpp_Runner"}],"commands":[{"command":"C_Cpp_Runner.selectFolder","title":"Select Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.selectMode","title":"Select Mode","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.buildFolder","title":"Build Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.runFolder","title":"Run Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.debugFolder","title":"Debug Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.cleanFolder","title":"Clean Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.folderContextMenu","title":"Select folder from context menu","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.resetLocalSettings","title":"Reset local settings","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.toggleExtensionState","title":"Toggle extension buttons in status bar","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.addCmdArgs","title":"Commandline Arguments","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.buildSingleFile","title":"Build Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.runCurrentSelection","title":"Run Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.debugCurrentSelection","title":"Debug Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.generateAssembler","title":"Generate Assembler Code","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.BuildAndDebugFile","title":"C/C++ Runner: Debug File","category":"C/C++","icon":"$(debug-alt)"},{"command":"C_Cpp_Runner.BuildAndRunFile","title":"C/C++ Runner: Run File","category":"C/C++","icon":"$(run)"}],"keybindings":[{"command":"C_Cpp_Runner.buildFolder","key":"ctrl+k b","mac":"ctrl+k b","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.buildSingleFile","key":"ctrl+alt+b","mac":"ctrl+alt+b","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.runCurrentSelection","key":"ctrl+alt+r","mac":"ctrl+alt+r","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.debugCurrentSelection","key":"ctrl+alt+d","mac":"ctrl+alt+d","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.addCmdArgs","key":"ctrl+alt+a","mac":"ctrl+alt+a","when":"C_Cpp_Runner:activatedExtension"}],"menus":{"explorer/context":[{"command":"C_Cpp_Runner.folderContextMenu","when":"explorerResourceIsFolder","group":"cCppRunnerGroup@1"}],"editor/title/run":[{"command":"C_Cpp_Runner.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/"},{"command":"C_Cpp_Runner.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/"}]},"configuration":{"type":"object","title":"C/C++ Runner","properties":{"C_Cpp_Runner.enableWarnings":{"type":"boolean","default":true,"description":"Whether to enable checking warnings or not.","scope":"resource"},"C_Cpp_Runner.warnings":{"type":"array","items":{"type":"string"},"default":["-Wall","-Wextra","-Wshadow","-Wpedantic","-Wunused","-Wconversion","-Wformat=2","-Wsign-conversion","-Wnull-dereference"],"description":"Warnings to check by the gcc/clang compiler.","scope":"resource"},"C_Cpp_Runner.msvcWarnings":{"type":"array","items":{"type":"string"},"default":["/W4","/permissive-","/w14242","/w14287","/w14296","/w14311","/w14826","/w44062","/w44242","/w14905","/w14906","/w14263","/w44265","/w14928"],"description":"Warnings to check by the MSVC compiler.","scope":"resource"},"C_Cpp_Runner.warningsAsError":{"type":"boolean","default":false,"description":"Whether to treat warnings as compiler errors or not.","scope":"resource"},"C_Cpp_Runner.cCompilerPath":{"type":"string","default":"gcc","description":"The path to the C Compiler (either gcc or clang).","scope":"resource"},"C_Cpp_Runner.cppCompilerPath":{"type":"string","default":"g++","description":"The path to the C++ Compiler (either g++ or clang++).","scope":"resource"},"C_Cpp_Runner.debuggerPath":{"type":"string","default":"gdb","description":"The path to the debugger (either gdb or lldb).","scope":"resource"},"C_Cpp_Runner.msvcBatchPath":{"type":"string","default":"","description":"The path to the MSVC batch file (e.g. VS2022 Compiler) - Windows only setting.","scope":"resource"},"C_Cpp_Runner.useMsvc":{"type":"boolean","default":false,"description":"Whether to use MSVC compiler or gcc/clang - Windows only setting.","scope":"resource"},"C_Cpp_Runner.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","c23","gnu89","gnu99","gnu11","gnu17","gnu23"],"default":"","description":"C-Standard for the C Compiler.","scope":"resource"},"C_Cpp_Runner.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","c++23","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20","gnu++23"],"default":"","description":"C++ Standard for the C++ Compiler.","scope":"resource"},"C_Cpp_Runner.compilerArgs":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional compiler arguments.","scope":"resource"},"C_Cpp_Runner.linkerArgs":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional linker arguments.","scope":"resource"},"C_Cpp_Runner.includePaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional include paths.","scope":"resource"},"C_Cpp_Runner.includeSearch":{"type":"array","default":["*","**/*"],"items":{"type":"string"},"description":"Include glob patterns for folder selection. (Ran before exclude pattern)","scope":"resource"},"C_Cpp_Runner.excludeSearch":{"type":"array","default":["**/build","**/build/**","**/.*","**/.*/**","**/.vscode","**/.vscode/**"],"items":{"type":"string"},"description":"Exclude glob patterns for folder selection. (Ran after include pattern)","scope":"resource"},"C_Cpp_Runner.useAddressSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the address sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.useUndefinedSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the undefined sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.useLeakSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the leak sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.showCompilationTime":{"type":"boolean","default":true,"description":"Whether to output the compilation time statistics.","scope":"resource"},"C_Cpp_Runner.useLinkTimeOptimization":{"type":"boolean","default":false,"description":"Whether to use LTO/IPO in release builds.","scope":"resource"},"C_Cpp_Runner.msvcSecureNoWarnings":{"type":"boolean","default":false,"description":"Whether to disable security warnings in MSVC builds. (Functions like scanf etc.)","scope":"resource"}}}},"scripts":{"webpack":"webpack --mode development","webpack-watch":"webpack --mode development --watch","vscode:prepublish":"npm run webpack","compile":"npm run webpack","compile-watch":"npm run webpack-watch","watch":"tsc -watch -p ./"},"devDependencies":{"@types/minimatch":"^3.0.5","@types/node":"^14.0.27","@types/vscode":"^1.53.0","@typescript-eslint/eslint-plugin":"^4.1.1","@typescript-eslint/eslint-plugin-tslint":"^4.20.0","@typescript-eslint/parser":"^4.1.1","eslint":"^7.9.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^32.3.0","prettier":"^2.2.1","typescript":"^4.0.2","webpack":"^5.28.0","webpack-cli":"^4.10.0"},"dependencies":{"json5":"^2.2.0","lookpath":"^1.2.0","minimatch":"^3.0.4","ts-loader":"^8.1.0","vsce":"^2.15.0"},"extensionDependencies":["vadimcn.vscode-lldb"]},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/franneck94.c-cpp-runner-9.4.7-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1752964416890,"pinned":false,"source":"gallery","id":"0f4eac03-b4ec-4a55-bce1-deb41fde32ab","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1741880},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"franneck94.vscode-c-cpp-config","uuid":"903d2817-890f-4412-ac1d-a23ea84d76e1"},"manifest":{"name":"vscode-c-cpp-config","displayName":"C/C++ Config","description":"Creates important config files for C/C++ projects.","version":"6.3.0","publisher":"franneck94","license":"MIT","icon":"icon.png","galleryBanner":{"color":"#9c9c9c","theme":"dark"},"engines":{"vscode":"^1.92.0"},"categories":["Programming Languages","Snippets"],"tags":["c","c++","configuration"],"repository":{"type":"git","url":"https://github.com/franneck94/vscode-c-cpp-config.git"},"homepage":"https://github.com/franneck94/vscode-c-cpp-config/README.md","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-config/issues"},"activationEvents":["onStartupFinished"],"main":"./dist/main","contributes":{"taskDefinitions":[{"type":"C_Cpp_Config"}],"commands":[{"command":"C_Cpp_Config.generateConfigC","title":"Generate C Config Files","category":"C/C++ Config"},{"command":"C_Cpp_Config.generateConfigCpp","title":"Generate C++ Config Files","category":"C/C++ Config"}],"configuration":{"type":"object","title":"C/C++ Config","properties":{"C_Cpp_Config.lineLength":{"type":"integer","default":120,"description":"The max line length for the tools.","scope":"machine"},"C_Cpp_Config.aggressiveSettings":{"type":"boolean","default":false,"description":"If auto formatting should be turned on.","scope":"machine"}}}},"scripts":{"webpack":"webpack --mode development","webpack-watch":"webpack --mode development --watch","vscode:prepublish":"npm run webpack","compile":"npm run webpack","compile-watch":"npm run webpack-watch","watch":"tsc -watch -p ./","lint":"eslint src --ext ts"},"devDependencies":{"@types/glob":">=8.1.0","@types/node":">=18.15.3","@types/vscode":">=1.76.0","@typescript-eslint/eslint-plugin":">=5.55.0","@typescript-eslint/eslint-plugin-tslint":">=5.55.0","@typescript-eslint/parser":">=5.55.0","eslint":">=8.36.0","eslint-plugin-import":">=2.27.5","eslint-plugin-jsdoc":">=40.0.3","glob":">=9.3.0","prettier":">=2.8.4","typescript":">=5.0.2","webpack":">=5.76.2","webpack-cli":">=5.0.1"},"dependencies":{"json5":"^2.2.0","ts-loader":"^9.4.2","tslint":"^6.1.3","vsce":"^2.15.0"},"extensionDependencies":["vadimcn.vscode-lldb"]},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/franneck94.vscode-c-cpp-config-6.3.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1752964416891,"pinned":false,"source":"gallery","id":"903d2817-890f-4412-ac1d-a23ea84d76e1","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":763874},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"twxs.cmake","uuid":"2be7cf14-2603-402e-9771-fd79df83cdf8"},"manifest":{"name":"cmake","version":"0.0.17","publisher":"twxs","displayName":"CMake","description":"CMake language support for Visual Studio Code","author":{"name":"Nicolas Martin"},"repository":{"type":"git","url":"https://github.com/twxs/vs.language.cmake.git"},"bugs":{"url":"https://github.com/twxs/vs.language.cmake/issues"},"homepage":"https://github.com/twxs/vs.language.cmake/blob/master/README.md","keywords":["CMake","Syntax"],"categories":["Languages","Snippets","Other"],"icon":"images/icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"license":"MIT","activationEvents":["onLanguage:cmake"],"engines":{"vscode":"^1.10.0"},"main":"./out/extension","contributes":{"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"commands":[{"command":"cmake.onlineHelp","title":"CMake: Online Help"}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"configuration":{"title":"CMake configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"The path to CMake generator executable"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"opener":"^1.4.2"},"devDependencies":{"typescript":"^2.0.9","vscode":"^1.0.3","@types/node":"^6.0.47","mocha":"^3.1.2","@types/mocha":"^2.2.33"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/twxs.cmake-0.0.17-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"twxs","metadata":{"installedTimestamp":1752964416888,"pinned":false,"source":"gallery","id":"2be7cf14-2603-402e-9771-fd79df83cdf8","publisherId":"b5ab7991-81a8-4557-af54-4cb8e01e85c1","publisherDisplayName":"twxs","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":8349674},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"cschlosser.doxdocgen","uuid":"da7e26d5-d57c-4742-ab47-d77fb189e195"},"manifest":{"name":"doxdocgen","displayName":"Doxygen Documentation Generator","description":"Let me generate Doxygen documentation from your source code for you.","version":"1.4.0","publisher":"cschlosser","engines":{"vscode":"^1.55.0"},"categories":["Other"],"badges":[{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CI/master","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/ci.yml?query=branch%3Amaster+","description":"Continous integration"},{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CD?label=Release","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/cd.yml?query=event%3Arelease++","description":"Release pipeline"},{"url":"https://codecov.io/gh/cschlosser/doxdocgen/branch/master/graph/badge.svg","href":"https://codecov.io/gh/cschlosser/doxdocgen","description":"Code coverage"}],"activationEvents":["onLanguage:cuda","onLanguage:cuda-cpp","onLanguage:cpp","onLanguage:c"],"contributes":{"configuration":{"type":"object","title":"Doxygen Documentation Generator Settings","properties":{"doxdocgen.c.triggerSequence":{"description":"Doxygen comment trigger. This character sequence triggers generation of Doxygen comments.","type":"string","default":"/**"},"doxdocgen.c.firstLine":{"description":"The first line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":"/**"},"doxdocgen.c.commentPrefix":{"description":"The prefix that is used for each comment line except for first and last.","type":"string","default":" * "},"doxdocgen.c.lastLine":{"description":"The last line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":" */"},"doxdocgen.c.setterText":{"description":"Smart text snippet for setters.","type":"string","default":"Set the {name} object"},"doxdocgen.c.getterText":{"description":"Smart text snippet for getters.","type":"string","default":"Get the {name} object"},"doxdocgen.c.factoryMethodText":{"description":"Smart text snippet for factory methods/functions.","type":"string","default":"Create a {name} object"},"doxdocgen.cpp.tparamTemplate":{"description":"The template of the template parameter Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@tparam {param} "},"doxdocgen.cpp.ctorText":{"description":"Smart text snippet for constructors.","type":"string","default":"Construct a new {name} object"},"doxdocgen.cpp.dtorText":{"description":"Smart text snippet for destructors.","type":"string","default":"Destroy the {name} object"},"doxdocgen.file.fileTemplate":{"description":"The template for the file parameter in Doxygen.","type":"string","default":"@file {name}"},"doxdocgen.file.copyrightTag":{"markdownDescription":"File copyright documentation tag.  Array of strings will be converted to one line per element. Can template `{year}`.","type":["array","string"],"default":["@copyright Copyright (c) {year}"]},"doxdocgen.file.versionTag":{"description":"Version number for the file.","type":"string","default":"@version 0.1"},"doxdocgen.file.customTag":{"markdownDescription":"Additional file documentation.  Array of strings will be converted to one line per element. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.file.fileOrder":{"markdownDescription":"The order to use for the file comment. Values can be used multiple times. Valid values are `file`, `author`, `brief`, `version`, `date`, `empty`, `copyright` and `custom`.","type":["array","string"],"default":["file","author","brief","version","date","empty","copyright","empty","custom"]},"doxdocgen.generic.includeTypeAtReturn":{"description":"Whether include type information at return.","type":"boolean","default":true},"doxdocgen.generic.boolReturnsTrueFalse":{"markdownDescription":"If this is enabled, the documentation for a `bool` return value will be split into `true` and `false` entries.","type":"boolean","default":true},"doxdocgen.generic.briefTemplate":{"description":"The template of the brief Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@brief {text}"},"doxdocgen.generic.paramTemplate":{"description":"The template of the param Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@param {param} "},"doxdocgen.generic.returnTemplate":{"description":"The template of the return Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@return {type} "},"doxdocgen.generic.linesToGet":{"description":"How many lines the plugin should look for to find the end of the declaration. Please be aware that setting this value too low could improve the speed of comment generation by a very slim margin but the plugin also may not correctly detect all declarations or definitions anymore.","type":"number","default":20},"doxdocgen.generic.authorName":{"markdownDescription":"Set the name of the author.  Replaces `{author}`.","type":"string","default":"your name"},"doxdocgen.generic.authorEmail":{"markdownDescription":"Set the e-mail address of the author.  Replaces `{email}`.","type":"string","default":"you@domain.com"},"doxdocgen.generic.authorTag":{"markdownDescription":"Set the style of the author tag and your name.  Can template `{author}` and `{email}`.","type":"string","default":"@author {author} ({email})"},"doxdocgen.generic.dateTemplate":{"description":"The template for the date parameter in Doxygen.","type":"string","default":"@date {date}"},"doxdocgen.generic.dateFormat":{"description":"The format to use for the date.","type":"string","default":"YYYY-MM-DD"},"doxdocgen.generic.generateSmartText":{"description":"Decide if you want to get smart text for certain commands.","type":"boolean","default":true},"doxdocgen.generic.splitCasingSmartText":{"markdownDescription":"Decide if the values put into `{name}` should be split according to their casing.","type":"boolean","default":true},"doxdocgen.generic.order":{"markdownDescription":"The order to use for the comment generation. Values can be used multiple times. Valid values are `brief`, `empty`, `tparam`, `param`, `return`, `custom`, `author`, `date`, `version` and `copyright`.","type":["array","string"],"default":["brief","empty","tparam","param","return","custom"]},"doxdocgen.generic.customTags":{"markdownDescription":"Custom tags to be added to the generic order. One tag per line will be added. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.generic.filteredKeywords":{"description":"Array of keywords that should be removed from the input prior to parsing.","type":"array","default":[]},"doxdocgen.generic.useGitUserName":{"markdownDescription":"Substitute `{author}` with `git config --get user.name`.","type":"boolean","default":false},"doxdocgen.generic.useGitUserEmail":{"markdownDescription":"Substitute `{email}` with `git config --get user.email`.","type":"boolean","default":false},"doxdocgen.generic.commandSuggestion":{"description":"Provide intellisense and snippet for doxygen commands","type":"boolean","default":true},"doxdocgen.generic.commandSuggestionAddPrefix":{"markdownDescription":"Add `\\` in doxygen command suggestion for better readbility (need to enable commandSuggestion)","type":"boolean","default":false}}}},"icon":"images/icon.png","keywords":["cpp","c++","c","Doxygen"],"license":"SEE LICENSE IN LICENSE","main":"./out/extension","repository":{"type":"git","url":"https://github.com/cschlosser/doxdocgen.git"},"bugs":{"url":"https://github.com/cschlosser/doxdocgen/labels/bug"},"scripts":{"vscode:prepublish":"yarn compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","test":"yarn compile && node ./out/test/runTests.js","cov":"yarn clean && nyc yarn test","lint":"tslint -c tslint.json 'src/**/*.ts'","clean":"rm -rf coverage .nyc_output out"},"dependencies":{"env-var":"^4.1.0","moment":"^2.20.1","opn":"^5.2.0","simple-git":"^2.38.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"0.1.3","@types/mocha":"^5.2.7","@types/node":"12.7.1","@types/vscode":"^1.55.0","decache":"^4.5.1","glob":"^7.1.6","handlebars":"^4.7.3","minimist":">=1.2.2","mocha":"^9.1.3","nyc":"12.0.1","ovsx":"^0.3.0","remap-istanbul":"^0.13.0","source-map-support":"^0.5.19","ts-node":"^9.1.1","tslint":"^5.20.0","typescript":"^4.2.4","vsce":"^2.6.7","vscode-test":"^1.5.2","yargs-parser":">=13.1.2"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/cschlosser.doxdocgen-1.4.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"cschlosser","metadata":{"installedTimestamp":1752964416886,"pinned":false,"source":"gallery","id":"da7e26d5-d57c-4742-ab47-d77fb189e195","publisherId":"45f11b45-124a-44bb-be40-51cea102eb70","publisherDisplayName":"cschlosser","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":7519722},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"aaron-bond.better-comments","uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b"},"manifest":{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"3.0.2","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"sponsor":{"url":"https://github.com/sponsors/aaron-bond"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.65.0"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"browser":"./out/web/extension.js","main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint -c tslint.json 'src/**/*.ts'","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"?","color":"#3498DB","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"//","color":"#474747","strikethrough":true,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"todo","color":"#FF8C00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"*","color":"#98C379","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false}]}}}},"dependencies":{"json5":"^2.2.1"},"devDependencies":{"@types/json5":"^2.2.0","@types/node":"^17.0.23","@types/vscode":"^1.65.0","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.3.1","tslint":"^6.1.3","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.10.0","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/aaron-bond.better-comments-3.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"aaron-bond","metadata":{"installedTimestamp":1752965243067,"pinned":false,"source":"gallery","id":"7a0110bb-231a-4598-aa1b-0769ea46d28b","publisherId":"02145bab-b083-4d1e-b8ec-08d7abdd68da","publisherDisplayName":"aaron-bond","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":357211},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"dez64ru.macos-modern-theme","uuid":"38ad76ae-2cd0-4962-8c5f-eb6b138b0ca3"},"manifest":{"name":"macos-modern-theme","displayName":"MacOS Modern Theme","description":"MacOS Modern is a theme pack styled to match native MacOS as closely as possible. Use recommended settings in the README.md for best results.","version":"2.3.18","publisher":"dez64ru","engines":{"vscode":"^1.25.0"},"keywords":["color-theme","icon-theme","macos","native","monterey"],"preview":true,"homepage":"https://github.com/davidbwaters/macos-modern-vscode-theme","repository":{"type":"git","url":"https://github.com/davidbwaters/macos-modern-vscode-theme.git"},"icon":"images/icon-big-sur.png","galleryBanner":{"color":"#0F0F0F","theme":"dark"},"categories":["Themes"],"contributes":{"themes":[{"label":"MacOS Modern Dark - Ventura Xcode Civic","uiTheme":"vs-dark","path":"./themes/color/big-sur-dark/xcode-civic.json"},{"label":"MacOS Modern Dark - Ventura Xcode","uiTheme":"vs-dark","path":"./themes/color/big-sur-dark/xcode-ventura.json"},{"label":"MacOS Modern Dark - Ventura Xcode Default","uiTheme":"vs-dark","path":"./themes/color/big-sur-dark/xcode-default-dark.json"},{"label":"MacOS Modern Dark - Xcode Civic","uiTheme":"vs-dark","path":"./themes/color/dark/xcode-civic.json"},{"label":"MacOS Modern Dark - Xcode Modern","uiTheme":"vs-dark","path":"./themes/color/dark/xcode-modern.json"},{"label":"MacOS Modern Dark - Xcode Default","uiTheme":"vs-dark","path":"./themes/color/dark/xcode-default-dark.json"},{"label":"MacOS Modern Light - Ventura Xcode","uiTheme":"vs","path":"./themes/color/big-sur-light/xcode-big-sur.json"},{"label":"MacOS Modern Light - Ventura Xcode Default","uiTheme":"vs","path":"./themes/color/big-sur-light/xcode-default.json"},{"label":"MacOS Modern Light - Ventura Xcode Low Key","uiTheme":"vs","path":"./themes/color/big-sur-light/xcode-low-key.json"},{"label":"MacOS Modern Light - Xcode Default","uiTheme":"vs","path":"./themes/color/light/xcode-default.json"},{"label":"MacOS Modern Light - Xcode Low Key","uiTheme":"vs","path":"./themes/color/light/xcode-low-key.json"}],"iconThemes":[{"id":"macos-modern-big-sur-icon-theme","label":"MacOS Modern - Ventura Icons","path":"./themes/icon/big-sur.json"},{"id":"macos-modern-legit-finder-icon-theme","label":"MacOS Modern - Legit Finder Icons","path":"./themes/icon/legit-finder.json"},{"id":"macos-modern-legit-xcode-icon-theme","label":"MacOS Modern - Legit Xcode Icons","path":"./themes/icon/legit-xcode.json"},{"id":"macos-modern-minimal-finder-icon-theme","label":"MacOS Modern - Minimal Finder Icons","path":"./themes/icon/minimal-finder.json"},{"id":"macos-modern-minimal-xcode-icon-theme","label":"MacOS Modern - Minimal Xcode Icons","path":"./themes/icon/minimal-xcode.json"},{"id":"macos-modern-minimal-mono-icon-theme","label":"MacOS Modern - Minimal Monochrome Icons","path":"./themes/icon/minimal-mono.json"}],"productIconThemes":[{"id":"macos-modern","label":"MacOS Modern","path":"./themes/product-icon/macos-modern.json"}]},"scripts":{"updateFont":"node ./build/updateFont.js"},"devDependencies":{"open":"^7.0.3","webfont":"^11.2.4"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/dez64ru.macos-modern-theme-2.3.18-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"dez64ru","metadata":{"installedTimestamp":1752978511234,"pinned":false,"source":"gallery","id":"38ad76ae-2cd0-4962-8c5f-eb6b138b0ca3","publisherId":"4c523020-ebf4-4025-a096-34a3e1b30529","publisherDisplayName":"dez64ru","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":28162651},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"uctakeoff.vscode-counter","uuid":"7789bd61-a874-4bf0-a8b4-d9e8d920af63"},"manifest":{"name":"vscode-counter","displayName":"VS Code Counter","description":"Count lines of code in many programming languages.","version":"3.5.0","publisher":"uctakeoff","author":{"name":"Ushiyama Kentaro"},"engines":{"vscode":"^1.85.0"},"galleryBanner":{"color":"#BF9C68","theme":"dark"},"license":"SEE LICENSE IN LICENSE.txt","icon":"icon.png","homepage":"https://github.com/uctakeoff/vscode-counter","repository":{"type":"git","url":"https://github.com/uctakeoff/vscode-counter.git"},"categories":["Other","Programming Languages"],"keywords":["count","loc","code","step","line"],"activationEvents":["workspaceContains:**/.VSCodeCounterCountRealtime"],"contributes":{"commands":[{"command":"extension.vscode-counter.countInFile","category":"VSCodeCounter","title":"Toggle Real-time Counter Visibility","icon":"icon.png"},{"command":"extension.vscode-counter.countInDirectory","category":"VSCodeCounter","title":"Count lines in directory","icon":"icon.png"},{"command":"extension.vscode-counter.countInWorkspace","category":"VSCodeCounter","title":"Count lines in workspace","icon":"icon.png"},{"command":"extension.vscode-counter.outputAvailableLanguages","category":"VSCodeCounter","title":"Check available languages","icon":"icon.png"},{"command":"extension.vscode-counter.saveLanguageConfigurations","category":"VSCodeCounter","title":"Save the collected language configurations","icon":"icon.png"}],"menus":{"explorer/context":[{"command":"extension.vscode-counter.countInDirectory","when":"explorerResourceIsFolder","group":"2_workspace"}]},"configuration":{"type":"object","title":"VSCode Counter","properties":{"VSCodeCounter.useGitignore":{"description":"Whether to use '.gitignore' files for excluding files.","type":"boolean","default":true},"VSCodeCounter.useFilesExclude":{"description":"Whether to use setting 'files.exclude' for excluding files.","type":"boolean","default":true},"VSCodeCounter.maxFindFiles":{"description":"Maximum number of searchable files.","type":"number","default":1000000},"VSCodeCounter.maxOpenFiles":{"description":"Maximum number of files that VSCodeCounter can read simultaneously.","type":"number","default":500},"VSCodeCounter.ignoreUnsupportedFile":{"description":"Ignore unsupported files.","type":"boolean","default":true},"VSCodeCounter.printNumberWithCommas":{"description":"Whether to print a number with commas as thousands separators.(except for CSV)","type":"boolean","default":true},"VSCodeCounter.includeIncompleteLine":{"description":"Include lines that do not end in a newline (last line).","type":"boolean","default":true},"VSCodeCounter.endOfLine":{"description":"A new line character to be used in the output file.","type":"string","enum":["\n","\r\n"],"default":"\n"},"VSCodeCounter.include":{"description":"Configure glob patterns for including files and folders.","type":"array","items":{"type":"string"},"default":["**/*"]},"VSCodeCounter.exclude":{"description":"Configure glob patterns for excluding files and folders.","type":"array","items":{"type":"string"},"default":["**/.gitignore","**/.vscode/**","**/node_modules/**"]},"VSCodeCounter.history":{"description":"Controls the number of recent result to keep in history. If it is greater than 1, save the results in separate directories.","type":"integer","minimum":0,"default":5},"VSCodeCounter.countDirectLevelFiles":{"description":"Count the files in the direct level as a separate item.","type":"boolean","default":true},"VSCodeCounter.outputDirectory":{"markdownDescription":"Directory path for outputting results. Variables can be included in that path for when output is defined outside of the project directory.\n- `${workspaceName}`: workspace name\n- `${workspacePath}`: name based on the workspace path","type":"string","default":".VSCodeCounter"},"VSCodeCounter.outputAsText":{"description":"Whether to output the result as a text file.","type":"boolean","default":true},"VSCodeCounter.outputAsCSV":{"description":"Whether to output the result as a CSV file.","type":"boolean","default":true},"VSCodeCounter.outputAsMarkdown":{"description":"Whether to output the result as a Markdown file.","type":"boolean","default":true},"VSCodeCounter.outputPreviewType":{"description":"Type of output file to preview after counting.","type":"string","enum":["none","text","csv","markdown","diff-text","diff-csv","diff-markdown"],"default":"markdown"},"VSCodeCounter.saveLocation":{"description":"Specify where to store the collected language configurations.","type":"string","enum":["global settings","workspace settings","output directory","use languageConfUri"],"default":"global settings"},"VSCodeCounter.languageConfUri":{"markdownDescription":"The destination file path or URI to be used if saveLocation `use languageConfUri` is specified.","type":"string"},"VSCodeCounter.languages":{"description":"Saved Language Configurations.","type":"object","default":{},"patternProperties":{".*":{"type":"object","title":"language configuration","properties":{"aliases":{"type":"array","description":"Name aliases for the language.","items":{"type":"string"}},"filenames":{"type":"array","description":"Filenames associated to the language.","items":{"type":"string"}},"extensions":{"type":"array","description":"File extensions associated to the language.","items":{"type":"string"}},"lineComments":{"type":"array","description":"The character sequence that starts a line comment.","items":{"type":"string"}},"blockComments":{"type":"array","description":"The character sequence indicating the beginning and end of the block comment.","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}}},"blockStrings":{"type":"array","description":"The character sequence indicating the beginning and end of the block document(here document).","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}}}}}}}}}},"main":"./out/extension.js","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/glob":"^7.2.0","@types/minimatch":"^3.0.5","@types/mocha":"^9.1.0","@types/node":"^17.0.8","@types/vscode":"^1.85.0","glob":"^7.2.0","mocha":"^9.2.2","tslint":"^6.1.2","typescript":"^4.5.4","vscode-test":"^1.6.1"},"dependencies":{"jsonc-parser":"^3.0.0","minimatch":"^5.0.1"}},"location":{"$mid":1,"path":"/home/sclorentz/.vscode-oss/extensions/uctakeoff.vscode-counter-3.5.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"uctakeoff","metadata":{"installedTimestamp":1753014525293,"pinned":false,"source":"gallery","id":"7789bd61-a874-4bf0-a8b4-d9e8d920af63","publisherId":"72761d5f-847f-4627-9ec7-fad7b21b0c59","publisherDisplayName":"uctakeoff","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":295148},"isValid":true,"validations":[],"preRelease":false}]}